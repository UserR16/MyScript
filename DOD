local repo = 'https://raw.githubusercontent.com/deividcomsono/Obsidian/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
local Options = Library.Options
local Toggles = Library.Toggles

Library.ShowToggleFrameInKeybinds = true 
Library.ShowCustomCursor = true
Library.NotifySide = "Right"
Library.Scheme.AccentColor = Color3.fromRGB(0, 255, 150)

local Window = Library:CreateWindow({
	Title = "Arimium Hub",
  Font = Enum.Font.SourceSansBold,
	NotifySide = "Right",
  Footer = "DIE OF DEATH | v1.2"
})

local Tabs = {
  Main = Window:AddTab("Main", "boxes"),
  ["UI Settings"] = Window:AddTab("Config", "settings"),
}

local Interact = Tabs.Main:AddLeftGroupbox("Interact", "key")

Interact:AddToggle("InstanceInteract",{
    Text = "Instance Interact",
    Default = false,
    Callback = function(v)
if v then
for _,v in ipairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") and v then
v.HoldDuration = 0
end
end
InstanceInteract = workspace.DescendantAdded:Connect(function(v)
if v:IsA("ProximityPrompt") and v then
v.HoldDuration = 0
end
end)
else
InstanceInteract:Disconnect()
end
end})
Interact:AddDivider()
Interact:AddToggle("AutoBadwareComputer",{
    Text = "Auto Badware Computer",
    Default = false,
    Callback = function(v)
_G.AutoBadwareComputer = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AutoBadwareomputer and workspace.GameAssets.Teams.Other:FindFirstChild("Computer") then
for _,v in ipairs(workspace.GameAssets.Teams.Other:GetChildren()) do
if v.Name == "Computer" and workspace.GameAssets.Teams.Other:FindFirstChild("Computer") then
fireproximityprompt(v.Primary.Prompt)
end
end
end
end)
end}):AddKeyPicker("AutoBadwareComputerKeybind", {
   Default = "B",
   Text = "Auto Badware Computer",
   Mode = Library.IsMobile and "Toggle" or "Hold",
   SyncToggleState = Library.IsMobile
})
local Anti = Tabs.Main:AddRightGroupbox("Anti", "hammer")
Anti:AddToggle("AntiEvilScary",{
    Text = "Anti Evil Scary",
    Default = false,
    Callback = function(v)
_G.AntiEvilScary = v
game:GetService("RunService").RenderStepped:Connect(function()
if workspace.GameAssets:FindFirstChild("Debris"):FindFirstChild("Cleanable"):FindFirstChild("EvilScary") then
workspace.GameAssets:FindFirstChild("Debris"):FindFirstChild("Cleanable"):FindFirstChild("EvilScary").CanTouch = not _G.AntiEvilScary
end
end)
end})
local Ability = Tabs.Main:AddLeftGroupbox("Ability", "layout-grid")
local function AAB(Ability, Image)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = Ability .. "_Button"
ScreenGui.ResetOnSpawn = true
ScreenGui.Parent = game.CoreGui

local Button = Instance.new("ImageButton")
Button.Size = UDim2.new(0, 70, 0, 70)
Button.Position = UDim2.new(0.85, 0, 0, 10)
Button.BackgroundColor3 = Library.Scheme.BackgroundColor
Button.BackgroundTransparency = 0
Button.Image = Image
Button.Parent = ScreenGui

local Shadow = Instance.new("Frame")
Shadow.Size = UDim2.new(0, 70, 0, 70)
Shadow.Position = UDim2.new(0, 0, 0, 0)
Shadow.BackgroundTransparency = 1
Shadow.Parent = Button

local uc = Instance.new("UICorner", Shadow)
local uc2 = Instance.new("UICorner", Button)

local UIStrokeShadow = Instance.new("UIStroke")
UIStrokeShadow.Color = Library.Scheme.MainColor
UIStrokeShadow.Thickness = 3
UIStrokeShadow.Transparency = 0
UIStrokeShadow.Parent = Shadow

game:GetService("RunService").RenderStepped:Connect(function()
UIStrokeShadow.Color = Library.Scheme.AccentColor
Button.BackgroundColor3 = Library.Scheme.MainColor
end)

local dragging = false
local dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    Button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end
 
Button.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Button.Position
 
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
 
Button.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
 
game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        update(input)
    end
end)

Button.MouseButton1Click:Connect(function()
if workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name) then
local args = {
	Ability
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RemoteFunctions"):WaitForChild("UseAbility"):InvokeServer(unpack(args))
end
end)
end
Ability:AddButton("Adrenaline [35s]", function()
AAB("Adrenaline", "rbxassetid://116399911657417")
end)
Ability:AddButton("Banana [20s]", function()
AAB("Banana", "rbxassetid://96202444819611")
end)
Ability:AddButton("Bonus Pad [60s]", function()
AAB("BonusPad", "rbxassetid://86775625332300")
end)
Ability:AddButton("Block [40s]", function()
AAB("Block", "rbxassetid://120929805037270")
end)
Ability:AddButton("Dash [20s]", function()
AAB("Dash", "rbxassetid://73777691791017")
end)
Ability:AddButton("Cloak [50s]", function()
AAB("Cloak", "rbxassetid://90476367580326")
end)
Ability:AddButton("Hotdog [15s]", function()
AAB("Hotdog", "rbxassetid://134322360499381")
end)
Ability:AddButton("Punch [40s]", function()
AAB("Punch", "rbxassetid://97428323453639")
end)
Ability:AddButton("Revolver [15s]", function()
AAB("Revolver", "rbxassetid://107624957891469")
end)
Ability:AddButton("Taunt [25s]", function()
AAB("Taunt", "rbxassetid://85436299122876")
end)
Ability:AddDivider()
local Abilities = {
"Adrenaline",
"Banana",
"BonusPad",
"Block",
"Dash",
"Cloak",
"Caretaker",
"Hotdog",
"Punch",
"Revolver",
"Taunt"
}
game:GetService("RunService").Stepped:Connect(function()
if _G.AutoSetAbility and workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name) then
local args = {
	{
		_G.SetAbility1 or "Adrenaline",
		_G.SetAbility2 or "Banana"
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RemoteEvents"):WaitForChild("AbilitySelection"):FireServer(unpack(args))
end
end)
Ability:AddDropdown("Ability1", {
	Values = Abilities,
	Default = "Adrenaline",
	Multi = false,
  Text = "Ability 1",
  Callback = function(v)
_G.SetAbility1 = v
end})
Ability:AddDropdown("Ability1", {
	Values = Abilities,
	Default = "Banana",
	Multi = false,
  Text = "Ability 2",
  Callback = function(v)
_G.SetAbility2 = v
end})
Ability:AddToggle("AutoSetAbility",{
    Text = "Auto Set Ability",
    Default = false,
    Callback = function(v)
_G.AutoSetAbility = v
end})
Ability:AddButton("Set Ability", function()
local args = {
	{
		_G.SetAbility1 or "Adrenaline",
		_G.SetAbility2 or "Banana"
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RemoteEvents"):WaitForChild("AbilitySelection"):FireServer(unpack(args))
end)
Ability:AddDivider()
Ability:AddButton("Set Loveshot", function()
local args = {
	{
		"Revolver",
		"Caretaker"
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RemoteEvents"):WaitForChild("AbilitySelection"):FireServer(unpack(args))
end)
Ability:AddButton("Set Health Buiderman", function()
local args = {
	{
		"BonusPad",
		"Caretaker"
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RemoteEvents"):WaitForChild("AbilitySelection"):FireServer(unpack(args))
end)
Ability:AddDivider()
local LocalPlayer = game.Players.LocalPlayer
pcall(function()
AbilityModule = require(LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("MainGui"):WaitForChild("Client"):WaitForChild("Modules"):WaitForChild("Ability"))
end)
pcall(function()
UIModule = require(LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("MainGui"):WaitForChild("Client"):WaitForChild("Modules"):WaitForChild("UI"))
end)
local AbilityDatas = {
    ["Adrenaline"] = {Name = "Adrenaline",InputShown = "",Tip = "Get a temporary speed boost for 6 seconds, highlighting you to your teamates and slowing you down after it\'s over.",Cooldown = 35,Icon = "rbxassetid://116399911657417",DisplayName = "Adrenaline"};
    ["Punch"] = {Name = "Punch",InputShown = "",Tip = "Swing foward stunning any killers hit for 3 seconds, if missed you\'ll get severe endlag.",Cooldown = 40,Icon = "rbxassetid://97428323453639",DisplayName = "Punch"};
    ["Caretaker"] = {Name = "Caretaker",InputShown = "",Tip = "Splash a potion infront of you, any survivors hit will heal 20 HP in total. Having this ability makes you lose 75 max health though!",Cooldown = 30,Icon = "rbxassetid://90712805517714",DisplayName = "Caretaker"};
    ["Cloak"] = {Name = "Cloak",InputShown = "",Tip = "Becoming heavily slowed but invisible for a short amount of time, Killers can still hit you though!",Cooldown = 50,Icon = "rbxassetid://90476367580326",DisplayName = "Cloak"};
    ["Block"] = {Name = "Block",InputShown = "",Tip = "Try blocking any form of damage, if successful heal 10 HP, get a speed boost and negate all the damage.",Cooldown = 40,Icon = "rbxassetid://120929805037270",DisplayName = "Block"};
    ["Dash"] = {Name = "Dash",InputShown = "",Tip = "Dash foward, after you will get fatigue for 2 seconds which slows stamina regeneration and makes it drain faster.",Cooldown = 20,Icon = "rbxassetid://73777691791017",DisplayName = "Dash"};
    ["BonusPad"] = {Name = "BonusPad",InputShown = "",Tip = "Build a temporary speed pad that speeds up any survivor who steps on it. Having this ability makes you lose 10 max health though!",Cooldown = 60,Icon = "rbxassetid://86775625332300",DisplayName = "BonusPad"};
    ["Hotdog"] = {Name = "Hotdog",InputShown = "",Tip = "Eat a hotdog, healing 15 HP at the cost of 10 stamina.",Cooldown = 15,Icon = "rbxassetid://134322360499381",DisplayName = "Hotdog"};
    ["Revolver"] = {Name = "Revolver",InputShown = "",Tip = "Shoot with your revolver stunning any killers hit for 2 seconds, you\'ll have to reload after. Having this ability makes you lose 20 max stamina though!",Cooldown = 15,Icon = "rbxassetid://107624957891469",DisplayName = "Revolver"};
    ["Taunt"] = {Name = "Taunt",InputShown = "",Tip = "Taunt the killer gaining a forcefield, highlighting the killer, and slowing them down for 5 seconds or until you\'re hit for the duration of the effect (1.25x damage).",Cooldown = 25,Icon = "rbxassetid://85436299122876",DisplayName = "Taunt"};
    ["Banana"] = {Name = "Banana",InputShown = "",Tip = "Toss a banana onto the floor, if the killer or the civilian who made it touch the banana, they will slip and be briefly stunned, the banana will naturally decay over time.",Cooldown = 20,Icon = "rbxassetid://96202444819611",DisplayName = "Banana Peel"};
}

Ability:AddButton("Set All Ability", function()
if workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name) then
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RemoteEvents"):WaitForChild("AbilitySelection"):FireServer(unpack({{tostring(Abilities[math.random(1, 11)]);tostring(Abilities[math.random(1, 11)])}}))
for _,ability in pairs(Abilities) do
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RemoteEvents"):WaitForChild("AbilitySelection"):FireServer(unpack({{tostring(ability)}}))
AbilityModule.CreateAbility(AbilityDatas[tostring(ability)])
end
end
end)
local Through = Tabs.Main:AddRightGroupbox("Through", "plus")
Through:AddToggle("ThroughKillerOnlyWalls",{
    Text = "Through Killer Only Walls",
    Default = false,
    Callback = function(v)
_G.ThroughRedKillerWalls = v
game:GetService("RunService").RenderStepped:Connect(function()
if workspace.GameAssets:FindFirstChild("Map"):FindFirstChild("Config"):FindFirstChild("KillerOnly") then
for _, v in ipairs(workspace.GameAssets:FindFirstChild("Map"):FindFirstChild("Config"):FindFirstChild("KillerOnly"):GetChildren()) do
if v.Parent.Name == "KillerOnly" and workspace.GameAssets:FindFirstChild("Map"):FindFirstChild("Config"):FindFirstChild("KillerOnly") then
v.CanCollide = not _G.ThroughRedKillerWalls
end
end
end
end)
end})
Through:AddToggle("ThroughArtfulWalls",{
    Text = "Through Artful Walls",
    Default = false,
    Callback = function(v)
_G.ThroughArtfulWalls = v
game:GetService("RunService").RenderStepped:Connect(function()
if workspace.GameAssets.Teams.Other:FindFirstChild("Wall") then
for _,v in ipairs(workspace.GameAssets.Teams.Other:GetChildren()) do
if v.Parent.Name == "Other" and v.Name == "Wall" and workspace.GameAssets.Teams.Other:FindFirstChild("Wall") then
v.HumanoidRootPart.CanCollide = not _G.ThroughArtfulWalls
end
end
end
end)
end})
local Players = Tabs.Main:AddLeftGroupbox("Players", "user")

local Player = game.Players
local Character = Player.LocalPlayer.Character
local HumanoidRootPart = Character.HumanoidRootPart
local Humanoid = Character.Humanoid
local Char = Character

local ff_connection = nil
local ff_enabled = false
local ff_cd = false

function Flip()
	ff_cd = true
	local character = Character
	local hrp = HumanoidRootPart
	local animator = Humanoid:FindFirstChildOfClass("Animator")
	if not hrp or not Humanoid then
		ff_cd = false
		return
	end
	local savedTracks = {}
	if animator then
		for _, track in ipairs(animator:GetPlayingAnimationTracks()) do
			savedTracks[#savedTracks + 1] = { track = track, time = track.TimePosition }
			track:Stop(0)
		end
	end
    Humanoid:ChangeState(Enum.HumanoidStateType.Physics)
	Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
	Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall, false)
	Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running, false)
	Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
	Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing, false)
	local duration = 0.5
	local steps = 120
	local startCFrame = hrp.CFrame
	local forwardVector = startCFrame.LookVector
	local upVector = Vector3.new(0, 1, 0)
	task.spawn(function()
		local startTime = tick()
		for i = 1, steps do
			local t = i / steps
			local height = 4 * (t - t ^ 2) * 10
			local nextPos = startCFrame.Position + forwardVector * (35 * t) + upVector * height	
            local rotation = startCFrame.Rotation * CFrame.Angles(-math.rad(i * (360 / steps)), 0, 0)

			hrp.CFrame = CFrame.new(nextPos) * rotation
			local elapsedTime = tick() - startTime
			local expectedTime = (duration / steps) * i
			local waitTime = expectedTime - elapsedTime
			if waitTime > 0 then
				task.wait(waitTime)
			end
		end

		hrp.CFrame = CFrame.new(startCFrame.Position + forwardVector * 35) * startCFrame.Rotation
		Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true)
		Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall, true)
		Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running, true)
		Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
		Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing, true)
		Humanoid:ChangeState(Enum.HumanoidStateType.Running)

		if animator then
			for _, data in ipairs(savedTracks) do
				local track = data.track
				track:Play()
				track.TimePosition = data.time
			end
		end
		task.wait(0.25)
		ff_cd = false
	end)
end
local sausageHolder = game.CoreGui.TopBarApp.TopBarApp.UnibarLeftFrame.UnibarMenu["2"]
local originalSize = sausageHolder.Size.X.Offset
local ff_connection = nil
local ff_enabled = false
local ff_cd = false
function SetFrontFlip(bool)
ff_enabled = bool
if ff_enabled == true then
sausageHolder = game.CoreGui.TopBarApp.TopBarApp.UnibarLeftFrame.UnibarMenu["2"]
originalSize = sausageHolder.Size.X.Offset
ff_button = Instance.new("Frame", sausageHolder)
		ff_button.Size = UDim2.new(0, 48, 0, 44)
		ff_button.BackgroundTransparency = 1
		ff_button.BorderSizePixel = 0
		ff_button.Position = UDim2.new(0, sausageHolder.Size.X.Offset - 48, 0, 0)
local imageButton = Instance.new("ImageButton", ff_button)
		imageButton.BackgroundTransparency = 1
		imageButton.BorderSizePixel = 0
		imageButton.Size = UDim2.new(0, 36, 0, 36)
		imageButton.AnchorPoint = Vector2.new(0.5, 0.5)
		imageButton.Position = UDim2.new(0.5, 0, 0.5, 0)
		imageButton.Image = "rbxthumb://type=Asset&id=2714338264&w=150&h=150"
game:GetService("RunService").RenderStepped:Connect(function()
imageButton.ImageColor3 = Library.Scheme.AccentColor
end)
ff_connection = imageButton.MouseButton1Click:Connect(function()
Flip()
end)
sausageHolder.Size = UDim2.new(0, originalSize + 48, 0, sausageHolder.Size.Y.Offset)
task.wait()
ff_button.Position = UDim2.new(0, sausageHolder.Size.X.Offset - 48, 0, 0)
task.spawn(function()
pcall(function()
repeat
sausageHolder.Size = UDim2.new(0, originalSize + 48, 0, sausageHolder.Size.Y.Offset)
task.wait()
ff_button.Position = UDim2.new(0, sausageHolder.Size.X.Offset - 48, 0, 0)
until ff_enabled == false
end)
end)
elseif ff_enabled == false then
if ff_connection then
ff_connection:Disconnect()
ff_connection = nil
end
if ff_button then
ff_button:Destroy()
end
sausageHolder.Size = UDim2.new(0, originalSize, 0, sausageHolder.Size.Y.Offset)
end
end
local inf = 9e9999999999999999999999
local StaminaScript = require(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Client.Modules.Movement)
game:GetService("RunService").Stepped:Connect(function()
if Char and workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name) then
if _G.InfStamina then
StaminaScript.Stamina = inf
StaminaScript.MaxStamina = inf
end
if _G.NoStun and Char and workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name):GetAttribute("WalkSpeedModifier") < 0 then
workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("WalkSpeedModifier", 0)
end
end
if Char and workspace.GameAssets.Teams.Killer:FindFirstChild(game.Players.LocalPlayer.Name) then
if _G.InfStamina then
StaminaScript.Stamina = inf
StaminaScript.MaxStamina = inf
end
if _G.NoStun and Char and workspace.GameAssets.Teams.Killer:FindFirstChild(game.Players.LocalPlayer.Name):GetAttribute("WalkSpeedModifier") < 0 then
workspace.GameAssets.Teams.Killer:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("WalkSpeedModifier", 0)
end
end
end)
game:GetService("RunService").RenderStepped:Connect(function()
if Char and workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name) then
workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("WalkSpeed", (12 + _G.WalkSpeedBoost))
workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("SprintSpeed", (26 + _G.SprintSpeedBoost))
end
if Char and workspace.GameAssets.Teams.Killer:FindFirstChild(game.Players.LocalPlayer.Name) then
workspace.GameAssets.Teams.Killer:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("WalkSpeed", (12 + _G.WalkSpeedBoost))
workspace.GameAssets.Teams.Killer:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("SprintSpeed", (28 + _G.SprintSpeedBoost))
end
if Char and workspace.GameAssets.Teams.Ghost:FindFirstChild(game.Players.LocalPlayer.Name) then
workspace.GameAssets.Teams.Ghost:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("WalkSpeed", (12 + _G.WalkSpeedBoost))
workspace.GameAssets.Teams.Ghost:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("SprintSpeed", (30 + _G.SprintSpeedBoost))
end
end)
Players:AddSlider("WalkSpeed", {
	Text = "Walk Speed Boost",
	Default = 0,
	Min = 0,
	Max = 10,
	Rounding = 1,
	Compact = true,
  Callback = function(v)
_G.WalkSpeedBoost = v
end})
Players:AddSlider("SprintSpeed", {
	Text = "Sprint Speed Boost",
	Default = 0,
	Min = 0,
	Max = 10,
	Rounding = 1,
	Compact = true,
  Callback = function(v)
_G.SprintSpeedBoost = v
end})
Players:AddToggle("InfStamina",{
    Text = "Inf Stamina",
    Default = false,
    Callback = function(v)
_G.InfStamina = v
end})
Players:AddToggle("NoStunned",{
    Text = "No Stunned",
    Default = false,
    Callback = function(v)
_G.NoStun = v
end})
Players:AddToggle("Extend",{
    Text = "Extend Hitbox",
    Default = false,
    Callback = function(v)
_G.ExtendHitbox = v
if ExtendHitbox == true then
local distance = 10
repeat game:GetService("RunService").Heartbeat:Wait()
local vel, movel = nil, 0.1
while not (game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character.Parent and game:GetService("Players").LocalPlayer.Character.HumanoidRootPart and game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Parent) do
game:GetService("RunService").Heartbeat:Wait()
end
vel = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Velocity
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Velocity = vel * distance + (game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame.LookVector * distance)
game:GetService("RunService").RenderStepped:Wait()
if (game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character.Parent and game:GetService("Players").LocalPlayer.Character.HumanoidRootPart and game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Parent) then
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Velocity = vel
end
until _G.ExtendHitbox == false
end
end})
Players:AddToggle("FlipUi",{
    Text = "Flip Button",
    Default = false,
    Callback = function(v)
SetFrontFlip(v)
end})
Players:AddToggle("Noclip",{
    Text = "Noclip",
    Default = false,
    Callback = function(v)
if v then
Noclip = game:GetService("RunService").RenderStepped:Connect(function()
if game.Players.LocalPlayer and game.Players.LocalPlayer.Character then
for _, part in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if part:IsA("BasePart") then
part.CanCollide = false
end
end
end
end)
else
if Noclip then
Noclip:Disconnect()
Noclip = nil
end
end
end}):AddKeyPicker("NoclipKeybind", {
   Default = "N",
   Text = "Noclip",
   Mode = Library.IsMobile and "Toggle" or "Hold",
   SyncToggleState = Library.IsMobile
})
local Camera = Tabs.Main:AddRightGroupbox("Camera", "camera")
game:GetService("RunService").RenderStepped:Connect(function()
workspace.CurrentCamera.FieldOfView = _G.FieldOfView or 70
end)
Camera:AddSlider("FOV", {
	Text = "Field Of View",
	Default = 70,
	Min = 70,
	Max = 120,
	Rounding = 1,
	Compact = true,
  Callback = function(v)
_G.FieldOfView = v
end})
Camera:AddToggle("RemoveBloodVignette",{
    Text = "No Blood Vignette",
    Default = false,
    Callback = function(v)
_G.RemoveBloodVignette = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.RemoveBloodVignette then
game:GetService("Players").LocalPlayer.PlayerGui.MainGui.BloodVignette.Visible = false
end
end)
end})
Camera:AddToggle("RemoveHurtOverlay",{
    Text = "No Hurt Overlay",
    Default = false,
    Callback = function(v)
_G.RemoveHurtOverlayVignette = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.RemoveHurtOverlayVignette then
game:GetService("Players").LocalPlayer.PlayerGui.MainGui.HurtOverlay.Visible = false
end
end)
end})
Camera:AddToggle("RemoveTauntVignette",{
    Text = "No Taunt Vignette",
    Default = false,
    Callback = function(v)
_G.RemoveTauntVignette = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.RemoveTauntVignette and game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RoundUI:FindFirstChild("Taunt") then
for _,v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RoundUI:GetChildren()) do
if v.Name == "Taunt" and v then
v.Visible = false
end
end
end
end)
end})
Camera:AddToggle("RemoveParanoyVignette",{
    Text = "No Paranoy Vignette",
    Default = false,
    Callback = function(v)
_G.RemoveParanoyVignette = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.RemoveParanoyVignette then
game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Paranoy.Visible = false
end
end)
end})
Camera:AddToggle("RemoveEvilScaryVignette",{
    Text = "No Evil Scary Vignette",
    Default = false,
    Callback = function(v)
_G.RemoveEvilScaryJumpscare = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.RemoveEvilScaryJumpscare then
game:GetService("Players").LocalPlayer.PlayerGui.MainGui.EvilScary.Visible = false
end
end)
end})
local Lighting = Tabs.Main:AddLeftGroupbox("Lighting", "lightbulb")
local Default = {
Shadows = game.Lighting.GlobalShadows,
Brightness = game.Lighting.Brightness,
OutdoorAmbient = game.Lighting.OutdoorAmbient
}
Lighting:AddToggle("Fullbright",{
    Text = "Fullbright",
    Default = false,
    Callback = function(v)
_G.Fullbright = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.Fullbright then
game.Lighting.GlobalShadows = false
game.Lighting.Brightness = 0.3
game.Lighting.OutdoorAmbient = Color3.new(1,1,1)
else
game.Lighting.GlobalShadows = Default.Shadows
game.Lighting.Brightness = Default.Brightness
game.Lighting.OutdoorAmbient = Default.OutdoorAmbient
end
end)
end})
Lighting:AddToggle("NoFog",{
    Text = "Disable Fog",
    Default = false,
    Callback = function(v)
_G.NoFog = v
game:GetService("RunService").RenderStepped:Connect(function()
if not game.Lighting:GetAttribute("FogStart") then game.Lighting:SetAttribute("FogStart", game.Lighting.FogStart) end
if not game.Lighting:GetAttribute("FogEnd") then game.Lighting:SetAttribute("FogEnd", game.Lighting.FogEnd) end
game.Lighting.FogStart = _G.NoFog and 0 or game.Lighting:GetAttribute("FogStart")
game.Lighting.FogEnd = _G.NoFog and math.huge or game.Lighting:GetAttribute("FogEnd")
local fog = game.Lighting:FindFirstChildOfClass("Atmosphere")
if fog then
if not fog:GetAttribute("Density") then fog:SetAttribute("Density", fog.Density) end
fog.Density = _G.NoFog and 0 or fog:GetAttribute("Density")
end
end)
end})
local ESP = Tabs.Main:AddRightGroupbox("ESP", "compass")
local function Highlight(target, color, name)
task.wait(0.25)
local Highlight = Instance.new('Highlight', target)
Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
Highlight.FillColor = color
Highlight.OutlineColor = color
Highlight.FillTransparency = 1
Highlight.OutlineTransparency =  0
Highlight.Name = name
end
ESP:AddToggle("KillersESP",{
    Text = "Killers ESP",
    Default = false,
    Callback = function(v)
if v then
for _,v in ipairs(workspace.GameAssets.Teams.Killer:GetChildren()) do
if v:IsA("Model") and v and v.Parent.Name == "Killer" then
Highlight(v, Color3.new(1), "YOUHUB : Killer ESP")
local Billboard = Instance.new("BillboardGui", v.HumanoidRootPart)
local TextLabel = Instance.new("TextLabel", Billboard)
local UIStroke = Instance.new("UIStroke", TextLabel)
Billboard.AlwaysOnTop = true
Billboard.Size = UDim2.new(0,400,0,100)
Billboard.Name = "YOUHUB : Killer ESP"
Billboard.Active = true
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.BackgroundTransparency = 1
TextLabel.BackgroundColor3 = Color3.new(0,0,0)
TextLabel.TextColor3 = Color3.new(1)
TextLabel.Font = "SourceSansBold"
TextLabel.TextSize = 14
TextLabel.TextTransparency = 0
TextLabel.Visible = true
TextLabel.Text = v.Name
TextLabel.Size = UDim2.new(1,0,0,0)
TextLabel.Position = UDim2.new(0.5,0,0.7,-25)
UIStroke.Thickness = 1
UIStroke.Color = Color3.new()
UIStroke.Transparency = 0
game:GetService("RunService").RenderStepped:Connect(function()
if _G.ShowText and v:FindFirstChild("Humanoid") then
TextLabel.Text = v.Name .. "\nHP:" .. v.Humanoid.Health .. "/" .. v.Humanoid.MaxHealth
else
TextLabel.Text = "•"
end
end)
end
end
KillersESP = workspace.GameAssets.Teams.Killer.DescendantAdded:Connect(function(v)
wait(0.3)
if v:IsA("Model") and v and v.Parent.Name == "Killer" then
Highlight(v, Color3.new(1), "YOUHUB : Killer ESP")
local Billboard = Instance.new("BillboardGui", v.HumanoidRootPart)
local TextLabel = Instance.new("TextLabel", Billboard)
local UIStroke = Instance.new("UIStroke", TextLabel)
Billboard.AlwaysOnTop = true
Billboard.Size = UDim2.new(0,400,0,100)
Billboard.Name = "YOUHUB : Killer ESP"
Billboard.Active = true
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.BackgroundTransparency = 1
TextLabel.BackgroundColor3 = Color3.new(0,0,0)
TextLabel.TextColor3 = Color3.new(1)
TextLabel.Font = "SourceSansBold"
TextLabel.TextSize = 14
TextLabel.TextTransparency = 0
TextLabel.Visible = true
TextLabel.Text = v.Name
TextLabel.Size = UDim2.new(1,0,0,0)
TextLabel.Position = UDim2.new(0.5,0,0.7,-25)
UIStroke.Thickness = 1
UIStroke.Color = Color3.new()
UIStroke.Transparency = 0
game:GetService("RunService").RenderStepped:Connect(function()
if _G.ShowText and v:FindFirstChild("Humanoid") then
TextLabel.Text = v.Name .. "\nHP:" .. v.Humanoid.Health .. "/" .. v.Humanoid.MaxHealth
else
TextLabel.Text = "•"
end
end)
end
end)
else
KillersESP:Disconnect()
for _,v in ipairs(workspace:GetDescendants()) do
if v.Name == "YOUHUB : Killer ESP" then
v:Destroy()
end
end
end
end})
ESP:AddToggle("SurvivorsESP",{
    Text = "Survivors ESP",
    Default = false,
    Callback = function(v)
if v then
for _,v in ipairs(workspace.GameAssets.Teams.Survivor:GetChildren()) do
if v:IsA("Model") and v and v.Parent.Name == "Survivor" then
Highlight(v, Color3.new(0,1), "YOUHUB : Survivor ESP")
local Billboard = Instance.new("BillboardGui", v.HumanoidRootPart)
local TextLabel = Instance.new("TextLabel", Billboard)
local UIStroke = Instance.new("UIStroke", TextLabel)
Billboard.AlwaysOnTop = true
Billboard.Size = UDim2.new(0,400,0,100)
Billboard.Name = "YOUHUB : Survivor ESP"
Billboard.Active = true
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.BackgroundTransparency = 1
TextLabel.BackgroundColor3 = Color3.new(0,0,0)
TextLabel.TextColor3 = Color3.new(0,1)
TextLabel.Font = "SourceSansBold"
TextLabel.TextSize = 14
TextLabel.TextTransparency = 0
TextLabel.Visible = true
TextLabel.Text = v.Name
TextLabel.Size = UDim2.new(1,0,0,0)
TextLabel.Position = UDim2.new(0.5,0,0.7,-25)
UIStroke.Thickness = 0.5
UIStroke.Color = Color3.new()
UIStroke.Transparency = 0
game:GetService("RunService").RenderStepped:Connect(function()
if _G.ShowText and v:FindFirstChild("Humanoid") then
TextLabel.Text = v.Name .. "\nHP:" .. v.Humanoid.Health .. "/" .. v.Humanoid.MaxHealth
else
TextLabel.Text = "•"
end
end)
end
end
SurvivorESP = workspace.GameAssets.Teams.Survivor.DescendantAdded:Connect(function(v)
wait(0.3)
if v:IsA("Model") and v and v.Parent.Name == "Survivor" then
Highlight(v, Color3.new(0,1), "YOUHUB : Survivor ESP")
local Billboard = Instance.new("BillboardGui", v.HumanoidRootPart)
local TextLabel = Instance.new("TextLabel", Billboard)
local UIStroke = Instance.new("UIStroke", TextLabel)
Billboard.AlwaysOnTop = true
Billboard.Size = UDim2.new(0,400,0,100)
Billboard.Name = "YOUHUB : Survivor ESP"
Billboard.Active = true
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.BackgroundTransparency = 1
TextLabel.BackgroundColor3 = Color3.new(0,0,0)
TextLabel.TextColor3 = Color3.new(0,1)
TextLabel.Font = "SourceSansBold"
TextLabel.TextSize = 14
TextLabel.TextTransparency = 0
TextLabel.Visible = true
TextLabel.Text = v.Name
TextLabel.Size = UDim2.new(1,0,0,0)
TextLabel.Position = UDim2.new(0.5,0,0.7,-25)
UIStroke.Thickness = 0.5
UIStroke.Color = Color3.new()
UIStroke.Transparency = 0
game:GetService("RunService").RenderStepped:Connect(function()
if _G.ShowText and v:FindFirstChild("Humanoid") then
TextLabel.Text = v.Name .. "\nHP:" .. v.Humanoid.Health .. "/" .. v.Humanoid.MaxHealth
else
TextLabel.Text = "•"
end
end)
end
end)
else
SurvivorESP:Disconnect()
for _,v in ipairs(workspace:GetDescendants()) do
if v.Name == "YOUHUB : Survivor ESP" then
v:Destroy()
end
end
end
end})
ESP:AddToggle("OtherESP",{
    Text = "Other ESP",
    Default = false,
    Callback = function(v)
if v then
for _,v in ipairs(workspace.GameAssets.Teams.Other:GetChildren()) do
if v:IsA("Model") and v and v.Parent.Name == "Other" then
Highlight(v, Color3.new(1,0,1), "YOUHUB : Other ESP")
local Billboard = Instance.new("BillboardGui", v)
local TextLabel = Instance.new("TextLabel", Billboard)
local UIStroke = Instance.new("UIStroke", TextLabel)
Billboard.AlwaysOnTop = true
Billboard.Size = UDim2.new(0,400,0,100)
Billboard.Name = "YOUHUB : Other ESP"
Billboard.Active = true
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.BackgroundTransparency = 1
TextLabel.BackgroundColor3 = Color3.new(0,0,0)
TextLabel.TextColor3 = Color3.new(1,0,1)
TextLabel.Font = "SourceSansBold"
TextLabel.TextSize = 14
TextLabel.TextTransparency = 0
TextLabel.Visible = true
TextLabel.Text = v.Name
TextLabel.Size = UDim2.new(1,0,0,0)
TextLabel.Position = UDim2.new(0.5,0,0.7,-25)
UIStroke.Thickness = 0.5
UIStroke.Color = Color3.new()
UIStroke.Transparency = 0
game:GetService("RunService").RenderStepped:Connect(function()
if _G.ShowText and v:FindFirstChild("Humanoid") then
TextLabel.Text = v.Name
else
TextLabel.Text = "•"
end
end)
end
end
OtherESP = workspace.GameAssets.Teams.Other.DescendantAdded:Connect(function(v)
wait(0.3)
if v:IsA("Model") and v and v.Parent.Name == "Other" then
Highlight(v, Color3.new(1,0,1), "YOUHUB : Other ESP")
local Billboard = Instance.new("BillboardGui", v)
local TextLabel = Instance.new("TextLabel", Billboard)
local UIStroke = Instance.new("UIStroke", TextLabel)
Billboard.AlwaysOnTop = true
Billboard.Size = UDim2.new(0,400,0,100)
Billboard.Name = "YOUHUB : Other ESP"
Billboard.Active = true
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.BackgroundTransparency = 1
TextLabel.BackgroundColor3 = Color3.new(0,0,0)
TextLabel.TextColor3 = Color3.new(1,0,1)
TextLabel.Font = "SourceSansBold"
TextLabel.TextSize = 14
TextLabel.TextTransparency = 0
TextLabel.Visible = true
TextLabel.Text = v.Name
TextLabel.Size = UDim2.new(1,0,0,0)
TextLabel.Position = UDim2.new(0.5,0,0.7,-25)
UIStroke.Thickness = 0.5
UIStroke.Color = Color3.new()
UIStroke.Transparency = 0
game:GetService("RunService").RenderStepped:Connect(function()
if _G.ShowText and v:FindFirstChild("Humanoid") then
TextLabel.Text = v.Name
else
TextLabel.Text = "•"
end
end)
end
end)
else
OtherESP:Disconnect()
for _,v in ipairs(workspace:GetDescendants()) do
if v.Name == "YOUHUB : Other ESP" then
v:Destroy()
end
end
end
end})
ESP:AddDivider()
ESP:AddToggle("ShowText",{
    Text = "Show Text",
    Default = false,
    Callback = function(v)
_G.ShowText = v
end})
local MenuGroup = Tabs["UI Settings"]:AddLeftGroupbox("Menu", "wrench")
-- Example of dynamically-updating watermark with common traits (fps and ping)
local FrameTimer = tick()
local FrameCounter = 0;
local FPS = 60;
local GetPing = (function() return math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue()) end)
local CanDoPing = pcall(function() return GetPing(); end)

local WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()
	FrameCounter += 1;

	if (tick() - FrameTimer) >= 1 then
		FPS = FrameCounter;
		FrameTimer = tick();
		FrameCounter = 0;
	end;

	if CanDoPing then
		Library:SetWatermark(('%d fps | %d ms'):format(
			math.floor(FPS),
			GetPing()
		));
	else
		Library:SetWatermark(('%d fps'):format(
			math.floor(FPS)
		));
	end
end);
MenuGroup:AddToggle("KeybindMenuOpen", {
	Default = Library.KeybindFrame.Visible,
	Text = "Open Keybind Menu",
	Callback = function(value)
		Library.KeybindFrame.Visible = value
	end,
})
MenuGroup:AddToggle("ShowCustomCursor", {
	Text = "Custom Cursor",
	Default = true,
	Callback = function(Value)
		Library.ShowCustomCursor = Value
	end,
})
MenuGroup:AddToggle("ShowFPSPing", {
	Text = "Show Smoothness",
	Default = false,
	Callback = function(Value)
		Library:SetWatermarkVisibility(Value)
	end,
})
MenuGroup:AddDropdown("NotificationSide", {
	Values = { "Left", "Right" },
	Default = "Right",

	Text = "Notification Side",

	Callback = function(Value)
		Library:SetNotifySide(Value)
	end,
})
MenuGroup:AddDropdown("DPIDropdown", {
	Values = { "50%", "75%", "100%", "125%", "150%", "175%", "200%" },
	Default = "100%",

	Text = "DPI Scale",

	Callback = function(Value)
		Value = Value:gsub("%%", "")
		local DPI = tonumber(Value)

		Library:SetDPIScale(DPI)
	end,
})
MenuGroup:AddDivider()
MenuGroup:AddLabel("Menu bind")
	:AddKeyPicker("MenuKeybind", { Default = "RightShift", NoUI = true, Text = "Menu keybind" })

MenuGroup:AddButton("Unload", function()
	Library:Unload()
end)

Library.ToggleKeybind = Options.MenuKeybind -- Allows you to have a custom keybind for the menu

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- ThemeManager (Allows you to have a menu theme system)

-- Hand the library over to our managers
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- Adds our MenuKeybind to the ignore list
-- (do you want each config to have a different menu key? probably not.)
SaveManager:SetIgnoreIndexes({ "MenuKeybind" })

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
ThemeManager:SetFolder("MyScriptHub")
SaveManager:SetFolder("MyScriptHub/specific-game")
SaveManager:SetSubFolder("specific-place") -- if the game has multiple places inside of it (for example: DOORS)
-- you can use this to save configs for those places separately
-- The path in this script would be: MyScriptHub/specific-game/settings/specific-place
-- [ This is optional ]

-- Builds our config menu on the right side of our tab
SaveManager:BuildConfigSection(Tabs["UI Settings"])

-- Builds our theme menu (with plenty of built in themes) on the left side
-- NOTE: you can also call ThemeManager:ApplyToGroupbox to add it to a specific groupbox
ThemeManager:ApplyToTab(Tabs["UI Settings"])

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()



