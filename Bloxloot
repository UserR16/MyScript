--// Create Text \\
local function Text(target, title, color, fontsize, name)
local Billboard = Instance.new("BillboardGui", target)
local TextLabel = Instance.new("TextLabel", Billboard)
local UIStroke = Instance.new("UIStroke", TextLabel)
--// Billboard \\
Billboard.AlwaysOnTop = true
Billboard.Size = UDim2.new(0,400,0,100)
Billboard.Name = name
Billboard.Active = true
--// TextLabel \\
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.BackgroundTransparency = 1
TextLabel.BackgroundColor3 = Color3.new(0,0,0)
TextLabel.TextColor3 = color
TextLabel.Font = "SourceSans"
TextLabel.TextSize = fontsize
TextLabel.TextTransparency = 0
TextLabel.Visible = true
TextLabel.Text = title
TextLabel.Size = UDim2.new(1,0,0,0)
TextLabel.Position = UDim2.new(0.5,0,0.7,-35)
--// UIStroke \\
UIStroke.Thickness = 1
UIStroke.Color = Color3.new()
UIStroke.Transparency = 0
end
--// Create Highlight \\
local function Highlight(target, color, name)
task.wait(0.25)
local Highlight = Instance.new('Highlight', target)
--// Highlight \\
Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
Highlight.FillColor = color
Highlight.OutlineColor = color
Highlight.FillTransparency = 1
Highlight.OutlineTransparency =  0
Highlight.Name = name
end
--// Disable Text & Highlight \\
local function Disable(name)
for _,v in ipairs(workspace:GetDescendants()) do
if v.Name == name then
v:Destroy()
end
end
end

local repo = 'https://raw.githubusercontent.com/mstudio45/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
local Options = Library.Options
local Toggles = Library.Toggles

Library.ShowToggleFrameInKeybinds = true
Library.ShowCustomCursor = true
Library.NotifySide = "Right"

local Window = Library:CreateWindow({
	Title = '[V4] BLOXLOOT 🗡️',
	Center = true,
	AutoShow = true,
	Resizable = true,
	ShowCustomCursor = true,
	UnlockMouseWhileOpen = true,
	NotifySide = "Right",
	TabPadding = 8,
	MenuFadeTime = 0
})

local Main = Window:AddTab("Main")
local RaidBoss = Main:AddLeftGroupbox('Raid Boss')

local NormalGravity = workspace.Gravity
RaidBoss:AddToggle('MyToggle',{
	Text = 'Auto Sheep',
	Default = false,
	Callback = function(v)
_G.FarmSheep = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.FarmSheep then
if workspace.World1.Part1.EnemySpawnPoints:FindFirstChild("1_1_3"):FindFirstChild("1_1_3") and workspace.World1.Part1.EnemySpawnPools:FindFirstChild("1_1_3"):FindFirstChild("1_1_3"):FindFirstChild("Humanoid").Health > 0 then
workspace.Gravity = 0
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.World1.Part1.EnemySpawnPools["1_1_3"]["1_1_3"].Torso.CFrame
if _G.LootTP then
for _,v in ipairs(workspace.Runtime.LootPoints:GetChildren()) do
if v.Parent.Name == "LootPoints" and v and (v.BasePart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 100 then
fireproximityprompt(v.BasePart.ProximityPrompt)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.BasePart.CFrame
end
end
end
else
workspace.Gravity = NormalGravity
end
else
workspace.Gravity = NormalGravity
end
end)
end})
RaidBoss:AddToggle('MyToggle',{
	Text = 'Auto King Zombie',
	Default = false,
	Callback = function(v)
_G.FarmKingZombie = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.FarmKingZombie then
if workspace.World1.Part1.EnemySpawnPoints:FindFirstChild("1_1_7"):FindFirstChild("1_1_7") and workspace.World1.Part1.EnemySpawnPoints:FindFirstChild("1_1_7"):FindFirstChild("1_1_7"):FindFirstChild("Humanoid").Health > 0 then
workspace.Gravity = 0
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.World1.Part1.EnemySpawnPools["1_1_8"]["1_1_8"].Torso.CFrame
if _G.LootTP then
for _,v in ipairs(workspace.Runtime.LootPoints:GetChildren()) do
if v.Parent.Name == "LootPoints" and v and (v.BasePart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 100 then
fireproximityprompt(v.BasePart.ProximityPrompt)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.BasePart.CFrame
end
end
end
else
workspace.Gravity = NormalGravity
end
else
workspace.Gravity = NormalGravity
end
end)
end})
RaidBoss:AddToggle('MyToggle',{
	Text = 'Auto King Skeleton',
	Default = false,
	Callback = function(v)
_G.FarmKingSkeleton = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.FarmKingSkeleton then
if workspace.World1.EnemySpawnPools["1"]:FindFirstChild("1_2_100"):FindFirstChild("1_2_100") and workspace.World1.EnemySpawnPools["1"]:FindFirstChild("1_2_100"):FindFirstChild("1_2_100"):FindFirstChild("Humanoid").Health > 0 then
workspace.Gravity = 0
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.World1.EnemySpawnPools["1"]["1_2_100"]["1_2_100"].Torso.CFrame
if _G.LootTP then
for _,v in ipairs(workspace.Runtime.LootPoints:GetChildren()) do
if v.Parent.Name == "LootPoints" and v and (v.BasePart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 100 then
fireproximityprompt(v.BasePart.ProximityPrompt)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.BasePart.CFrame
end
end
end
else
workspace.Gravity = NormalGravity
end
else
workspace.Gravity = NormalGravity
end
end)
end})
RaidBoss:AddToggle('MyToggle',{
	Text = 'Auto Spider Queen',
	Default = false,
	Callback = function(v)
_G.FarmSpiderQueen = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.FarmSpiderQueen then
if workspace.World1.EnemySpawnPools["1"]:FindFirstChild("1_2_101"):FindFirstChild("1_2_101") and workspace.World1.EnemySpawnPools["1"]:FindFirstChild("1_2_101"):FindFirstChild("1_2_101"):FindFirstChild("Humanoid").Health > 0 then
workspace.Gravity = 0
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.World1.EnemySpawnPools["1"]["1_2_101"]["1_2_101"].Torso.CFrame
if _G.LootTP then
for _,v in ipairs(workspace.Runtime.LootPoints:GetChildren()) do
if v.Parent.Name == "LootPoints" and v and (v.BasePart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 100 then
fireproximityprompt(v.BasePart.ProximityPrompt)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.BasePart.CFrame
end
end
end
else
workspace.Gravity = NormalGravity
end
else
workspace.Gravity = NormalGravity
end
end)
end})
RaidBoss:AddDivider()
RaidBoss:AddToggle('MyToggle',{
	Text = 'Auto Collect Teleport',
	Default = false,
	Callback = function(v)
end})

local Server = Main:AddLeftGroupbox('Server')
Server:AddToggle('MyToggle',{
	Text = 'Auto Server Hop',
	Default = false,
	Callback = function(v)
_G.AutoServerHop = v
while _G.AutoServerHop do
local Player = game.Players.LocalPlayer    
local Http = game:GetService("HttpService")
local TPS = game:GetService("TeleportService")
local Api = "https://games.roblox.com/v1/games/"

local _place,_id = game.PlaceId, game.JobId
-- Asc for lowest player count, Desc for highest player count
local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=10"
function ListServers(cursor)
   local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
   return Http:JSONDecode(Raw)
end
-- choose a random server and join every 2 minutes
   --freeze player before teleporting to prevent synapse crash?
   local Servers = ListServers()
   local Server = Servers.data[math.random(1,#Servers.data)]
   TPS:TeleportToPlaceInstance(_place, Server.id, Player)
wait(1.5)
end
end})
Server:AddButton({
Text = "Server Hop",
DoubleClick = true,
Func = function()
local Player = game.Players.LocalPlayer    
local Http = game:GetService("HttpService")
local TPS = game:GetService("TeleportService")
local Api = "https://games.roblox.com/v1/games/"

local _place,_id = game.PlaceId, game.JobId
-- Asc for lowest player count, Desc for highest player count
local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=10"
function ListServers(cursor)
   local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
   return Http:JSONDecode(Raw)
end
-- choose a random server and join every 2 minutes
   --freeze player before teleporting to prevent synapse crash?
   local Servers = ListServers()
   local Server = Servers.data[math.random(1,#Servers.data)]
   TPS:TeleportToPlaceInstance(_place, Server.id, Player)
end})

local Players = Main:AddRightGroupbox('Players')
Players:AddSlider('MySlider',{
	Text = 'Speed',
	Default = 20,
	Min = 20,
	Max = 100,
	Rounding = 1,
	Compact = false,
	Callback = function(v)
_G.SetWalkSpeed = v
end})
Players:AddToggle('MyToggle',{
	Text = 'Loop Speed',
	Default = false,
	Callback = function(v)
_G.WalkSpeed = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.WalkSpeed then
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = _G.SetWalkSpeed or 20
end
end)
end})
Players:AddSlider('MySlider',{
	Text = 'FOV',
	Default = 70,
	Min = 70,
	Max = 120,
	Rounding = 1,
	Compact = false,
	Callback = function(v)
_G.SetFOV = v
end})
Players:AddToggle('MyToggle',{
	Text = 'Loop FOV',
	Default = false,
	Callback = function(v)
_G.FOV = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.FOV then
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = _G.SetFOV or 70
end
end)
end})
Players:AddDivider()
Players:AddToggle('MyToggle',{
	Text = 'Infinite Jump',
	Default = false,
	Callback = function(v)
_G.InfiniteJump = true
game:GetService("UserInputService").JumpRequest:connect(function()
if _G.InfiniteJump then
game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
end
end)
end})
local Miscellaneous = Main:AddRightGroupbox('Miscellaneous')
Miscellaneous:AddToggle('MyToggle',{
	Text = 'Hitbox Enemies',
	Default = false,
	Callback = function(v)
if v then
for _,v in pairs(workspace.World1:GetDescendants()) do
if v.Name == "HumanoidRootPart" then
v.Size = Vector3.new(100,100,100)
v.CanCollide = false
elseif v.Name == "RootPart" then
v.Size = Vector3.new(100,100,100)
v.CanCollide = false
end
end
HitboxEnemies = workspace.World1.DescendantAdded:Connect(function(v)
if v.Name == "HumanoidRootPart" then
v.Size = Vector3.new(100,100,100)
v.CanCollide = false
elseif v.Name == "RootPart" then
v.Size = Vector3.new(100,100,100)
v.CanCollide = false
end
end)
else
HitboxEnemies:Disconnect()
for _,v in pairs(workspace.World1:GetDescendants()) do
if v.Name == "HumanoidRootPart" then
v.Size = Vector3.new(3,3,3)
v.CanCollide = false
elseif v.Name == "RootPart" then
v.Size = Vector3.new(3,3,3)
v.CanCollide = false
end
end
end
end})
Miscellaneous:AddToggle('MyToggle',{
	Text = 'Hitbox Players',
	Default = false,
	Callback = function(v)
_G.HitboxPlayers = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.HitboxPlayers then
for _, otherPlayer in pairs(game.Players:GetPlayers()) do
if otherPlayer ~= game.Players.LocalPlayer and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
otherPlayer.Character.HumanoidRootPart.Size = Vector3.new(70,70,70)
end
end
else
for _, otherPlayer in pairs(game.Players:GetPlayers()) do
if otherPlayer ~= game.Players.LocalPlayer and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
otherPlayer.Character.HumanoidRootPart.Size = Vector3.new(3,3,3)
end
end
end
end)
end})
Miscellaneous:AddDivider()
Miscellaneous:AddToggle('MyToggle',{
	Text = 'Enemies ESP',
	Default = false,
	Callback = function(v)
if v then
for _,v in pairs(workspace.World1:GetDescendants()) do
if v.Name == "HumanoidRootPart" and not v.Parent:FindFirstChild("EnemiesESP") then
Highlight(v.Parent, Color3.new(1), "EnemiesESP")
elseif v.Name == "RootPart" and not v.Parent:FindFirstChild("EnemiesESP") then
Highlight(v.Parent, Color3.new(1), "EnemiesESP")
end
end
EnemiesESP = workspace.World1.DescendantAdded:Connect(function(v)
if v.Name == "HumanoidRootPart" and not v.Parent:FindFirstChild("EnemiesESP") then
Highlight(v.Parent, Color3.new(1), "EnemiesESP")
elseif v.Name == "RootPart" and not v.Parent:FindFirstChild("EnemiesESP") then
Highlight(v.Parent, Color3.new(1), "EnemiesESP")
end
end)
else
EnemiesESP:Disconnect()
for _,v in ipairs(workspace.World1:GetDescendants()) do
if v.Name == "EnemiesESP" then
v:Destroy()
end
end
end
end})
Miscellaneous:AddToggle('MyToggle',{
	Text = 'Players ESP',
	Default = false,
	Callback = function(v)
if v then
PlayersESP = game:GetService("RunService").RenderStepped:Connect(function()
for _, otherPlayer in pairs(game.Players:GetPlayers()) do
if otherPlayer ~= game.Players.LocalPlayer and otherPlayer.Character and not otherPlayer.Character:FindFirstChild("PlayersESP") then
Text(otherPlayer.Character.HumanoidRootPart, otherPlayer.Name, Color3.new(1,1,1), 14, "PlayersESP")
Highlight(otherPlayer.Character, Color3.new(1), "PlayerssESP")
end
end
end)
else
PlayersESP:Disconnect()
for _,v in ipairs(game.Players:GetDescendants()) do
if v.Name == "PlayersESP" then
v:Destroy()
end
end
end
end})
