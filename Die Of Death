local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/dist/main.lua"))()
Library:SetTheme("Dark")
local function gradient(text, startColor, endColor)
local result = ""
for i = 1, #text do
local t = (i - 1) / (#text - 1)
local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)
result = result .. string.format('<font color="rgb(%d,%d,%d)">%s</font>', r, g, b, text:sub(i, i))
end
return result
end

local Window = Library:CreateWindow({
Title = "YOUHUB",
Icon = "geist:key",
Author = "v0.1",
Folder = "WindUI_Example",
Size = UDim2.fromOffset(400, 400),
Theme = "Dark",
User = {
Enabled = true,
Anonymous = false,
Callback = function()
Library:Notify({
Title = "Welcome",
Content = "This is your user profile!",
Duration = 3
})
end
},
Acrylic = true,
HideSearchBar = false,
SideBarWidth = 200
})
Window:Tag({
Title = "DIE OF DEATH",
Color = Library:Gradient({
["0"]   = { Color = Color3.fromRGB(125,0,255), Transparency = 0 },
["100"] = { Color = Color3.fromRGB(255,0,255), Transparency = 0 },
}, {
Rotation = 45,
}),
})
local Tabs = {
Main = Window:Section({ Title = "Tabs", Opened = true }),
}

local Tabs = {
Main = Tabs.Main:Tab({ Title = "Main", Icon = "layout-grid"}),
Players = Tabs.Main:Tab({ Title = "Players", Icon = "user"}),
Camera = Tabs.Main:Tab({ Title = "Camera", Icon = "camera"}),
ESP = Tabs.Main:Tab({ Title = "ESP", Icon = "map"}),
Config = Tabs.Main:Tab({ Title = "Setting", Icon = "settings"}),
}

local function Notify(name, time)
Library:Notify({
Title = "Notification",
Content = name,
Icon = "bell",
Duration = time or 5
})
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = 10
Sound.PlayOnRemove = true
Sound:Destroy()
end

Tabs.Main:Section({Title = "Interact", Icon = "mouse"})
Tabs.Main:Toggle({
    Title = "Instance Interact",
    Value = false,
    Callback = function(v) 
if v then
for _,v in ipairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") and v then
v.HoldDuration = 0
end
end
InstanceInteract = workspace.DescendantAdded:Connect(function(v)
if v:IsA("ProximityPrompt") and v then
v.HoldDuration = 0
end
end)
else
InstanceInteract:Disconnect()
end
end})
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AutoBreakComputer and workspace.GameAssets.Teams.Other:FindFirstChild("Computer") then
for _,v in ipairs(workspace.GameAssets.Teams.Other:GetChildren()) do
if v.Name == "Computer" and v then
fireproximityprompt(v.Primary.Prompt)
end
end
end
end)
Tabs.Main:Toggle({
    Title = "Auto Break Computer",
    Value = false,
    Callback = function(v) 
_G.AutoBreakComputer = v
end})
Tabs.Main:Section({Title = "Anti", Icon = "hammer"})
game:GetService("RunService").RenderStepped:Connect(function()
if workspace.GameAssets:FindFirstChild("Debris"):FindFirstChild("Cleanable"):FindFirstChild("EvilScary") then
workspace.GameAssets:FindFirstChild("Debris"):FindFirstChild("Cleanable"):FindFirstChild("EvilScary").CanTouch = not _G.AntiEvilScary
end
end)
Tabs.Main:Toggle({
    Title = "Anti-Evil Scary",
    Value = false,
    Callback = function(v) 
_G.AntiEvilScary = v
end})
Tabs.Main:Section({Title = "Abilities", Icon = "compass"})
local function AddAbilityButton(Ability)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = Ability .. "_Button"
ScreenGui.ResetOnSpawn = true
ScreenGui.Parent = game.CoreGui

local Button = Instance.new("TextButton")
Button.Size = UDim2.new(0, 120, 0, 60)
Button.Position = UDim2.new(0.85, 0, 0, 10)
Button.BackgroundColor3 = Color3.fromRGB(0,0,0)
Button.BackgroundTransparency = 0.3
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.Font = Enum.Font.SourceSansBold
Button.TextSize = 16
Button.Text = Ability
Button.Parent = ScreenGui

local Shadow = Instance.new("Frame")
Shadow.Size = UDim2.new(0, 120, 0, 60)
Shadow.Position = UDim2.new(0, 0, 0, 0)
Shadow.BackgroundTransparency = 1
Shadow.Parent = Button

local UICornerShadow = Instance.new("UICorner")
UICornerShadow.Parent = Shadow
UICornerShadow.CornerRadius = UDim.new(0,15)

local UICornerButton = Instance.new("UICorner")
UICornerButton.Parent = Button
UICornerButton.CornerRadius = UDim.new(0,15)

local UIStrokeShadow = Instance.new("UIStroke")
UIStrokeShadow.Color = Color3.fromRGB(255,255,255)
UIStrokeShadow.Thickness = 3
UIStrokeShadow.Transparency = 0.2
UIStrokeShadow.Parent = Shadow

local dragging = false
local dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    Button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end
 
Button.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Button.Position
 
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
 
Button.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
 
game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        update(input)
    end
end)

Button.MouseButton1Click:Connect(function()
if workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name) then
local args = {
	Ability
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RemoteFunctions"):WaitForChild("UseAbility"):InvokeServer(unpack(args))
end
end)
end
Tabs.Main:Button({
    Title = "Adrenaline",
    Icon = "plus",
    Callback = function()
AddAbilityButton("Adrenaline")
end})
Tabs.Main:Button({
    Title = "Banana",
    Icon = "plus",
    Callback = function()
AddAbilityButton("Banana")
end})
Tabs.Main:Button({
    Title = "Bonus Pad",
    Icon = "plus",
    Callback = function()
AddAbilityButton("BonusPad")
end})
Tabs.Main:Button({
    Title = "Block",
    Icon = "plus",
    Callback = function()
AddAbilityButton("Block")
end})
Tabs.Main:Button({
    Title = "Dash",
    Icon = "plus",
    Callback = function()
AddAbilityButton("Dash")
end})
Tabs.Main:Button({
    Title = "Cloak",
    Icon = "plus",
    Callback = function()
AddAbilityButton("Cloak")
end})
Tabs.Main:Button({
    Title = "Caretaker",
    Icon = "plus",
    Callback = function()
AddAbilityButton("Caretaker")
end})
Tabs.Main:Button({
    Title = "Hotdog",
    Icon = "plus",
    Callback = function()
AddAbilityButton("Hotdog")
end})
Tabs.Main:Button({
    Title = "Punch",
    Icon = "plus",
    Callback = function()
AddAbilityButton("Punch")
end})
Tabs.Main:Button({
    Title = "Revolver",
    Icon = "plus",
    Callback = function()
AddAbilityButton("Revolver")
end})
Tabs.Main:Button({
    Title = "Taunt",
    Icon = "plus",
    Callback = function()
AddAbilityButton("Taunt")
end})
Tabs.Main:Divider()

local Ability = {
"Adrenaline",
"Banana",
"BonusPad",
"Block",
"Dash",
"Cloak",
"Caretaker",
"Hotdog",
"Punch",
"Revolver",
"Taunt"
}
game:GetService("RunService").Stepped:Connect(function()
if _G.AutoSetAbility and workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name) then
local args = {
	{
		_G.SetAbility1 or "Adrenaline",
		_G.SetAbility2 or "Banana"
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RemoteEvents"):WaitForChild("AbilitySelection"):FireServer(unpack(args))
end
end)

Tabs.Main:Dropdown({
    Title = "Ability 1",
    Values = Ability,
    Value = "Adrenaline",
    Callback = function(v)
_G.SetAbility1 = v
end})
Tabs.Main:Dropdown({
    Title = "Ability 2",
    Values = Ability,
    Value = "Banana",
    Callback = function(v)
_G.SetAbility2 = v
end})
Tabs.Main:Toggle({
    Title = "Auto Set Ability",
    Value = false,
    Callback = function(v) 
_G.AutoSetAbility = v
end})
Tabs.Main:Button({
    Title = "Set Ability",
    Icon = "compass",
    Callback = function()
local args = {
	{
		_G.SetAbility1 or "Adrenaline",
		_G.SetAbility2 or "Banana"
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RemoteEvents"):WaitForChild("AbilitySelection"):FireServer(unpack(args))
end})
Tabs.Main:Section({Title = "Other", Icon = "plus"})
game:GetService("RunService").RenderStepped:Connect(function()
if workspace.GameAssets:FindFirstChild("Map"):FindFirstChild("Config"):FindFirstChild("KillerOnly") then
for _, v in ipairs(workspace.GameAssets:FindFirstChild("Map"):FindFirstChild("Config"):FindFirstChild("KillerOnly"):GetChildren()) do
if v.Parent.Name == "KillerOnly" and v then
v.CanCollide = not _G.ThroughRedKillerWalls
end
end
end
end)
Tabs.Main:Toggle({
    Title = "Through Red Killer Walls",
    Value = false,
    Callback = function(v) 
_G.ThroughRedKillerWalls = v
end})
game:GetService("RunService").RenderStepped:Connect(function()
if workspace.GameAssets.Teams.Other:FindFirstChild("Wall") then
for _,v in ipairs(workspace.GameAssets.Teams.Other:GetChildren()) do
if v.Parent.Name == "Other" and v.Name == "Wall" and v then
v.HumanoidRootPart.CanCollide = not _G.ThroughBuildKillerWalls
end
end
end
end)

Tabs.Players:Section({Title = "Players", Icon = "user"})

local inf = 9e999999999

game:GetService("RunService").Stepped:Connect(function()
if workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name) then
if _G.InfStamina then
workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("MaxStamina", inf)
end
if _G.NoStun and workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name):GetAttribute("WalkSpeedModifier") < 0 then
workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("WalkSpeedModifier", 0)
end
end
if workspace.GameAssets.Teams.Killer:FindFirstChild(game.Players.LocalPlayer.Name) then
if _G.InfStamina then
workspace.GameAssets.Teams.Killer:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("MaxStamina", inf)
end
if _G.NoStun and workspace.GameAssets.Teams.Killer:FindFirstChild(game.Players.LocalPlayer.Name):GetAttribute("WalkSpeedModifier") < 0 then
workspace.GameAssets.Teams.Killer:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("WalkSpeedModifier", 0)
end
end
end)
game:GetService("RunService").RenderStepped:Connect(function()
if workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name) then
game.Players.LocalPlayer.Character.Humanoid.JumpPower = _G.JumpPower or 0
workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("WalkSpeed", (12 + _G.WalkSpeedBoost))
workspace.GameAssets.Teams.Survivor:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("SprintSpeed", (26 + _G.SprintSpeedBoost))
end
if workspace.GameAssets.Teams.Killer:FindFirstChild(game.Players.LocalPlayer.Name) then
game.Players.LocalPlayer.Character.Humanoid.JumpPower = _G.JumpPower or 0
workspace.GameAssets.Teams.Killer:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("WalkSpeed", (12 + _G.WalkSpeedBoost))
workspace.GameAssets.Teams.Killer:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("SprintSpeed", (28 + _G.SprintSpeedBoost))
end
if workspace.GameAssets.Teams.Ghost:FindFirstChild(game.Players.LocalPlayer.Name) then
game.Players.LocalPlayer.Character.Humanoid.JumpPower = _G.JumpPower or 0
workspace.GameAssets.Teams.Ghost:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("WalkSpeed", (12 + _G.WalkSpeedBoost))
workspace.GameAssets.Teams.Ghost:FindFirstChild(game.Players.LocalPlayer.Name):SetAttribute("SprintSpeed", (30 + _G.SprintSpeedBoost))
end
end)
Tabs.Players:Slider({
    Title = "Walk Speed Boost",
    Value = { Min = 0, Max = 10, Default = 0 },
    Callback = function(v)
_G.WalkSpeedBoost = v
end})
Tabs.Players:Slider({
    Title = "Sprint Speed Boost",
    Value = { Min = 0, Max = 10, Default = 0 },
    Callback = function(v)
_G.SprintSpeedBoost = v
end})


Tabs.Players:Toggle({
    Title = "Infinite Stamina",
    Value = false,
    Callback = function(v) 
_G.InfStamina = v
end})
Tabs.Players:Toggle({
    Title = "Disabled Stun",
    Value = false,
    Callback = function(v) 
_G.NoStun = v
end})
Tabs.Players:Toggle({
    Title = "Noclip",
    Value = false,
    Callback = function(v) 
if v then
Noclip = game:GetService("RunService").RenderStepped:Connect(function()
if game.Players.LocalPlayer and game.Players.LocalPlayer.Character then
for _, part in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
if part:IsA("BasePart") then
part.CanCollide = false
end
end
end
end)
else
if Noclip then
Noclip:Disconnect()
Noclip = nil
end
end
end})

Tabs.Camera:Section({Title = "Vignette", Icon = "camera"})
Tabs.Camera:Toggle({
    Title = "Remove Blood Vignette",
    Value = false,
    Callback = function(v) 
_G.RemoveBloodVignette = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.RemoveBloodVignette then
game:GetService("Players").LocalPlayer.PlayerGui.MainGui.BloodVignette.Visible = false
end
end)
end})
Tabs.Camera:Toggle({
    Title = "Remove Hurt Overlay Vignette",
    Value = false,
    Callback = function(v) 
_G.RemoveHurtOverlayVignette = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.RemoveHurtOverlayVignette then
game:GetService("Players").LocalPlayer.PlayerGui.MainGui.HurtOverlay.Visible = false
end
end)
end})
Tabs.Camera:Toggle({
    Title = "Remove Taunt Vignette",
    Value = false,
    Callback = function(v) 
_G.RemoveTauntVignette = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.RemoveTauntVignette and game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RoundUI:FindFirstChild("Taunt") then
for _,v in ipairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.RoundUI:GetChildren()) do
if v.Name == "Taunt" and v then
v.Visible = false
end
end
end
end)
end})
Tabs.Camera:Toggle({
    Title = "Remove Paranoy Vignette",
    Value = false,
    Callback = function(v) 
_G.RemoveParanoyVignette = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.RemoveParanoyVignette then
game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Paranoy.Visible = false
end
end)
end})

Tabs.Camera:Section({Title = "Jumpscare", Icon = "camera"})
Tabs.Camera:Toggle({
    Title = "Remove Evil Scary Jumpscare",
    Value = false,
    Callback = function(v) 
_G.RemoveEvilScaryJumpscare = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.RemoveEvilScaryJumpscare then
game:GetService("Players").LocalPlayer.PlayerGui.MainGui.EvilScary.Visible = false
end
end)
end})
Tabs.Camera:Section({Title = "Camera", Icon = "camera"})
game:GetService("RunService").RenderStepped:Connect(function()
workspace.CurrentCamera.FieldOfView = _G.FieldOfView or 70
end)
Tabs.Camera:Slider({
    Title = "Field Of View",
    Value = { Min = 70, Max = 120, Default = 70 },
    Callback = function(v)
_G.FieldOfView = v
end})
local Default = {
Shadows = game.Lighting.GlobalShadows,
Brightness = game.Lighting.Brightness,
OutdoorAmbient = game.Lighting.OutdoorAmbient
}
Tabs.Camera:Toggle({
    Title = "Fullbright",
    Value = false,
    Callback = function(v) 
_G.Fullbright = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.Fullbright then
game.Lighting.GlobalShadows = false
game.Lighting.Brightness = 0.3
game.Lighting.OutdoorAmbient = Color3.new(1,1,1)
else
game.Lighting.GlobalShadows = Default.Shadows
game.Lighting.Brightness = Default.Brightness
game.Lighting.OutdoorAmbient = Default.OutdoorAmbient
end
end)
end})
Tabs.Camera:Toggle({
    Title = "No Fog",
    Value = false,
    Callback = function(v) 
_G.NoFog = v
game:GetService("RunService").RenderStepped:Connect(function()
if not game.Lighting:GetAttribute("FogStart") then game.Lighting:SetAttribute("FogStart", game.Lighting.FogStart) end
if not game.Lighting:GetAttribute("FogEnd") then game.Lighting:SetAttribute("FogEnd", game.Lighting.FogEnd) end
game.Lighting.FogStart = _G.NoFog and 0 or game.Lighting:GetAttribute("FogStart")
game.Lighting.FogEnd = _G.NoFog and math.huge or game.Lighting:GetAttribute("FogEnd")
local fog = game.Lighting:FindFirstChildOfClass("Atmosphere")
if fog then
if not fog:GetAttribute("Density") then fog:SetAttribute("Density", fog.Density) end
fog.Density = _G.NoFog and 0 or fog:GetAttribute("Density")
end
end)
end})

Tabs.ESP:Section({Title = "ESP", Icon = "map"})
local function Highlight(target, color, name)
task.wait(0.25)
local Highlight = Instance.new('Highlight', target)
Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
Highlight.FillColor = color
Highlight.OutlineColor = color
Highlight.FillTransparency = 1
Highlight.OutlineTransparency =  0
Highlight.Name = name
end
Tabs.ESP:Toggle({
    Title = "Killers ESP",
    Value = false,
    Callback = function(v) 
if v then
for _,v in ipairs(workspace.GameAssets.Teams.Killer:GetChildren()) do
if v:IsA("Model") and v and v.Parent.Name == "Killer" then
Highlight(v, Color3.new(1), "YOUHUB : Killer ESP")
local Billboard = Instance.new("BillboardGui", v.HumanoidRootPart)
local TextLabel = Instance.new("TextLabel", Billboard)
local UIStroke = Instance.new("UIStroke", TextLabel)
Billboard.AlwaysOnTop = true
Billboard.Size = UDim2.new(0,400,0,100)
Billboard.Name = "YOUHUB : Killer ESP"
Billboard.Active = true
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.BackgroundTransparency = 1
TextLabel.BackgroundColor3 = Color3.new(0,0,0)
TextLabel.TextColor3 = Color3.new(1)
TextLabel.Font = "SourceSansBold"
TextLabel.TextSize = 14
TextLabel.TextTransparency = 0
TextLabel.Visible = true
TextLabel.Text = v.Name
TextLabel.Size = UDim2.new(1,0,0,0)
TextLabel.Position = UDim2.new(0.5,0,0.7,-25)
UIStroke.Thickness = 1
UIStroke.Color = Color3.new()
UIStroke.Transparency = 0
end
end
KillersESP = workspace.GameAssets.Teams.Killer.DescendantAdded:Connect(function(v)
wait(0.3)
if v:IsA("Model") and v and v.Parent.Name == "Killer" then
Highlight(v, Color3.new(1), "YOUHUB : Killer ESP")
local Billboard = Instance.new("BillboardGui", v.HumanoidRootPart)
local TextLabel = Instance.new("TextLabel", Billboard)
local UIStroke = Instance.new("UIStroke", TextLabel)
Billboard.AlwaysOnTop = true
Billboard.Size = UDim2.new(0,400,0,100)
Billboard.Name = "YOUHUB : Killer ESP"
Billboard.Active = true
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.BackgroundTransparency = 1
TextLabel.BackgroundColor3 = Color3.new(0,0,0)
TextLabel.TextColor3 = Color3.new(1)
TextLabel.Font = "SourceSansBold"
TextLabel.TextSize = 14
TextLabel.TextTransparency = 0
TextLabel.Visible = true
TextLabel.Text = v.Name
TextLabel.Size = UDim2.new(1,0,0,0)
TextLabel.Position = UDim2.new(0.5,0,0.7,-25)
UIStroke.Thickness = 1
UIStroke.Color = Color3.new()
UIStroke.Transparency = 0
end
end)
else
KillersESP:Disconnect()
for _,v in ipairs(workspace:GetDescendants()) do
if v.Name == "YOUHUB : Killer ESP" then
v:Destroy()
end
end
end
end})
Tabs.ESP:Toggle({
    Title = "Survivors ESP",
    Value = false,
    Callback = function(v) 
if v then
for _,v in ipairs(workspace.GameAssets.Teams.Survivor:GetChildren()) do
if v:IsA("Model") and v and v.Parent.Name == "Survivor" then
Highlight(v, Color3.new(0,1), "YOUHUB : Survivor ESP")
local Billboard = Instance.new("BillboardGui", v.HumanoidRootPart)
local TextLabel = Instance.new("TextLabel", Billboard)
local UIStroke = Instance.new("UIStroke", TextLabel)
Billboard.AlwaysOnTop = true
Billboard.Size = UDim2.new(0,400,0,100)
Billboard.Name = "YOUHUB : Survivor ESP"
Billboard.Active = true
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.BackgroundTransparency = 1
TextLabel.BackgroundColor3 = Color3.new(0,0,0)
TextLabel.TextColor3 = Color3.new(0,1)
TextLabel.Font = "SourceSansBold"
TextLabel.TextSize = 14
TextLabel.TextTransparency = 0
TextLabel.Visible = true
TextLabel.Text = v.Name
TextLabel.Size = UDim2.new(1,0,0,0)
TextLabel.Position = UDim2.new(0.5,0,0.7,-25)
UIStroke.Thickness = 0.5
UIStroke.Color = Color3.new()
UIStroke.Transparency = 0
end
end
SurvivorESP = workspace.GameAssets.Teams.Survivor.DescendantAdded:Connect(function(v)
wait(0.3)
if v:IsA("Model") and v and v.Parent.Name == "Survivor" then
Highlight(v, Color3.new(0,1), "YOUHUB : Survivor ESP")
local Billboard = Instance.new("BillboardGui", v.HumanoidRootPart)
local TextLabel = Instance.new("TextLabel", Billboard)
local UIStroke = Instance.new("UIStroke", TextLabel)
Billboard.AlwaysOnTop = true
Billboard.Size = UDim2.new(0,400,0,100)
Billboard.Name = "YOUHUB : Survivor ESP"
Billboard.Active = true
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.BackgroundTransparency = 1
TextLabel.BackgroundColor3 = Color3.new(0,0,0)
TextLabel.TextColor3 = Color3.new(0,1)
TextLabel.Font = "SourceSansBold"
TextLabel.TextSize = 14
TextLabel.TextTransparency = 0
TextLabel.Visible = true
TextLabel.Text = v.Name
TextLabel.Size = UDim2.new(1,0,0,0)
TextLabel.Position = UDim2.new(0.5,0,0.7,-25)
UIStroke.Thickness = 0.5
UIStroke.Color = Color3.new()
UIStroke.Transparency = 0
end
end)
else
SurvivorESP:Disconnect()
for _,v in ipairs(workspace:GetDescendants()) do
if v.Name == "YOUHUB : Survivor ESP" then
v:Destroy()
end
end
end
end})

Tabs.ESP:Toggle({
    Title = "Other ESP",
    Value = false,
    Callback = function(v) 
if v then
for _,v in ipairs(workspace.GameAssets.Teams.Other:GetChildren()) do
if v:IsA("Model") and v and v.Parent.Name == "Other" then
Highlight(v, Color3.new(1,0,1), "YOUHUB : Other ESP")
local Billboard = Instance.new("BillboardGui", v)
local TextLabel = Instance.new("TextLabel", Billboard)
local UIStroke = Instance.new("UIStroke", TextLabel)
Billboard.AlwaysOnTop = true
Billboard.Size = UDim2.new(0,400,0,100)
Billboard.Name = "YOUHUB : Other ESP"
Billboard.Active = true
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.BackgroundTransparency = 1
TextLabel.BackgroundColor3 = Color3.new(0,0,0)
TextLabel.TextColor3 = Color3.new(1,0,1)
TextLabel.Font = "SourceSansBold"
TextLabel.TextSize = 14
TextLabel.TextTransparency = 0
TextLabel.Visible = true
TextLabel.Text = v.Name
TextLabel.Size = UDim2.new(1,0,0,0)
TextLabel.Position = UDim2.new(0.5,0,0.7,-25)
UIStroke.Thickness = 0.5
UIStroke.Color = Color3.new()
UIStroke.Transparency = 0
end
end
OtherESP = workspace.GameAssets.Teams.Other.DescendantAdded:Connect(function(v)
wait(0.3)
if v:IsA("Model") and v and v.Parent.Name == "Other" then
Highlight(v, Color3.new(1,0,1), "YOUHUB : Other ESP")
local Billboard = Instance.new("BillboardGui", v)
local TextLabel = Instance.new("TextLabel", Billboard)
local UIStroke = Instance.new("UIStroke", TextLabel)
Billboard.AlwaysOnTop = true
Billboard.Size = UDim2.new(0,400,0,100)
Billboard.Name = "YOUHUB : Other ESP"
Billboard.Active = true
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.BackgroundTransparency = 1
TextLabel.BackgroundColor3 = Color3.new(0,0,0)
TextLabel.TextColor3 = Color3.new(1,0,1)
TextLabel.Font = "SourceSansBold"
TextLabel.TextSize = 14
TextLabel.TextTransparency = 0
TextLabel.Visible = true
TextLabel.Text = v.Name
TextLabel.Size = UDim2.new(1,0,0,0)
TextLabel.Position = UDim2.new(0.5,0,0.7,-25)
UIStroke.Thickness = 0.5
UIStroke.Color = Color3.new()
UIStroke.Transparency = 0
end
end)
else
OtherESP:Disconnect()
for _,v in ipairs(workspace:GetDescendants()) do
if v.Name == "YOUHUB : Other ESP" then
v:Destroy()
end
end
end
end})
