local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/liebertsx/Tora-Library/main/src/librarynew",true))()
local Window1 = Library:CreateWindow("BLOXLOOT")
local Event = Window1:AddFolder("Raid Boss")
local NormalGravity = workspace.Gravity
Event:AddToggle({
	text = "Auto King Skeleton",
	callback = function(v)
_G.FarmKingSkeleton = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.FarmKingSkeleton and workspace.World1.EnemySpawnPools["1"]:FindFirstChild("1_2_100"):FindFirstChild("1_2_100").Torso then
workspace.Gravity = 20
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.World1.EnemySpawnPools["1"]["1_2_100"]["1_2_100"].Torso.CFrame
for _,v in ipairs(workspace.Runtime.LootPoints:GetChildren()) do
if v.Parent.Name == "LootPoints" and v and (v.BasePart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 100 then
fireproximityprompt(v.BasePart.ProximityPrompt)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.BasePart.CFrame
end
end
else
workspace.Gravity = NormalGravity
end
end)
end})
Event:AddToggle({
	text = "Auto Spider Queen",
	callback = function(v)
_G.FarmSpiderQueen = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.FarmSpiderQueen and workspace.World1.EnemySpawnPools["1"]:FindFirstChild("1_2_101"):FindFirstChild("1_2_101").Torso then
workspace.Gravity = 20
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.World1.EnemySpawnPools["1"]["1_2_101"]["1_2_101"].Torso.CFrame
for _,v in ipairs(workspace.Runtime.LootPoints:GetChildren()) do
if v.Parent.Name == "LootPoints" and v and (v.BasePart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 100 then
fireproximityprompt(v.BasePart.ProximityPrompt)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.BasePart.CFrame
end
end
else
workspace.Gravity = NormalGravity
end
end)
end})

local Main = Window1:AddFolder("Main")
Main:AddToggle({
	text = "Hitbox Enemies",
	callback = function(v)
if v then
for _,v in pairs(workspace.World1:GetDescendants()) do
if v.Name == "HumanoidRootPart" then
v.Size = Vector3.new(100,100,100)
v.CanCollide = false
elseif v.Name == "RootPart" then
v.Size = Vector3.new(100,100,100)
v.CanCollide = false
end
end
HitboxEnemies = workspace.World1.DescendantAdded:Connect(function(v)
if v.Name == "HumanoidRootPart" then
v.Size = Vector3.new(100,100,100)
v.CanCollide = false
elseif v.Name == "RootPart" then
v.Size = Vector3.new(100,100,100)
v.CanCollide = false
end
end)
else
HitboxEnemies:Disconnect()
for _,v in pairs(workspace.World1:GetDescendants()) do
if v.Name == "HumanoidRootPart" then
v.Size = Vector3.new(3,3,3)
v.CanCollide = false
elseif v.Name == "RootPart" then
v.Size = Vector3.new(3,3,3)
v.CanCollide = false
end
end
end
end})
game:GetService("RunService").RenderStepped:Connect(function()
if _G.HitboxPlayers then
for _, otherPlayer in pairs(game.Players:GetPlayers()) do
if otherPlayer ~= game.Players.LocalPlayer and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
otherPlayer.Character.HumanoidRootPart.Size = Vector3.new(70,70,70)
end
end
else
for _, otherPlayer in pairs(game.Players:GetPlayers()) do
if otherPlayer ~= game.Players.LocalPlayer and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
otherPlayer.Character.HumanoidRootPart.Size = Vector3.new(3,3,3)
end
end
end
end)
Main:AddToggle({
	text = "Hitbox Players",
	callback = function(v)
_G.HitboxPlayers = v
end})
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AutoClaimItems then
for _,v in ipairs(workspace.Runtime.LootPoints:GetChildren()) do
if v.Parent.Name == "LootPoints" and v then
fireproximityprompt(v.BasePart.ProximityPrompt)
end
end
end
end)
Main:AddToggle({
	text = "Auto Claim Items",
	callback = function(v)
_G.AutoClaimItems = v
end})
local Players = Window1:AddFolder("Players")
Players:AddSlider({
	text = "Walkspeed",
	min = 20,
	max = 50,
	dual = true,
	callback = function(v)
_G.SetWalkSpeed = v
end})
game:GetService("RunService").RenderStepped:Connect(function()
if _G.WalkSpeed then
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = _G.SetWalkSpeed or 20
end
end)
Players:AddToggle({
	text = "Loop Walkspeed",
	callback = function(v)
_G.WalkSpeed = v
end})
local Server = Window1:AddFolder("Server")
Server:AddButton({
	text = "Server Hop",
	callback = function()
local Player = game.Players.LocalPlayer    
local Http = game:GetService("HttpService")
local TPS = game:GetService("TeleportService")
local Api = "https://games.roblox.com/v1/games/"

local _place,_id = game.PlaceId, game.JobId
-- Asc for lowest player count, Desc for highest player count
local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=10"
function ListServers(cursor)
   local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
   return Http:JSONDecode(Raw)
end
-- choose a random server and join every 2 minutes
   --freeze player before teleporting to prevent synapse crash?
   local Servers = ListServers()
   local Server = Servers.data[math.random(1,#Servers.data)]
   TPS:TeleportToPlaceInstance(_place, Server.id, Player)
end})
Library:Init()
--[[
Main:AddButton({
	text = "Click me",
	flag = "button",
	callback = function()
	print("hello world")
end
})

folder:AddToggle({
	text = "Toggle",
	flag = "toggle",
	callback = function(v)
	print(v)
end
})
folder:AddSlider({
	text = "Fov",
	min = 70,
	max = 170,
	dual = true,
	type = "slider",
	callback = function(v)
	print(v)
end
})
folder:AddLabel({
	text = "This Is Sick!",
	type = "label"
	})
folder:AddColor({
	text = "Color Picker",
	flag = "color",
	type = "color",
	callback = function(v)
	print(v)
end
})
folder:AddList({
    text = "Color",
    values = {"Red", "Green", "Blue"},
    callback = function(value)
        print("Selected color:", value)
    end,
    open = false,
    flag = "color_option"
})
folder:AddBind({
    text = "bind",
    key = "X",
    hold = false,
    callback = function()
    end
})
]]
